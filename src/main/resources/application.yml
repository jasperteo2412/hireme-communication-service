# ===============================
# = CUSTOM
# ===============================
# You can generate your own RSA key pair with ssh-keygen,
# or get it in GenerateRSAKeyPair.
# Local key pair
local:
  publickKey: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvpO6M1Ghv4YeEeOFHB41FtzwDLB49ovrjfYU4+YvTvXvwL1AdVlJhKfp/MveMK8tzL5Prya11nsIQnyz/dVdiWhu7xqC6fE/xbWswEskBRa/QUvOFaKZS6ZRenGsst7YTQmiEWlhZwduDvCcPrz4pEusRg+GtETdbWqO3D0O+NF9bmkEGcKvHB1BHKv6Nj8PSL0Zt8h2fbZLWNSEYWPLCA+onhtGL7pAkpGQxAtZLJTYhrTw4oo7+bcSjha/2AHfnsCcMa65EoU1BSjD18bjG+AAE6JNURH5Nl2NgRL7wT4LH1/0vJpUnCxjkWWN46648k22ogciDSr73msJuAzp9wIDAQAB
  privateKey: MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC+k7ozUaG/hh4R44UcHjUW3PAMsHj2i+uN9hTj5i9O9e/AvUB1WUmEp+n8y94wry3Mvk+vJrXWewhCfLP91V2JaG7vGoLp8T/FtazASyQFFr9BS84VoplLplF6cayy3thNCaIRaWFnB24O8Jw+vPikS6xGD4a0RN1tao7cPQ740X1uaQQZwq8cHUEcq/o2Pw9IvRm3yHZ9tktY1IRhY8sID6ieG0YvukCSkZDEC1kslNiGtPDiijv5txKOFr/YAd+ewJwxrrkShTUFKMPXxuMb4AATok1REfk2XY2BEvvBPgsfX/S8mlScLGORZY3jrrjyTbaiByINKvveawm4DOn3AgMBAAECggEBAKT1S+vV0fLszSRg0rv27a8fiG0DZ4DIthjIE2b8vKBVQrSLW7r3kSpRCbk2Ydm0GCmr5V9PW4AOOKUMOeQSBofErJksUnraxn+E9MXxhHkfKmcDjZuuhZA0ozwgHwMo3wM3vl/h3lyG0t39qNCpU3MqyTBPiiKJpTxrSsMZ2tbFRunHN1g4sCIOzm28TlBrzO+tSl1fKqwstlCAJlJ4zwMpKh7lmAPIYXlmCPfDiwqaKBJezCBtThLHKeEgJxTXbrJ1mZwvPaW3ZtZVFwQjJy4N8XM4B3q+IQRBndw7/FR1aLIcFIunOEW13ZPy1PIJ8O94BCb9+n627Gx8xFrq+hkCgYEA635aeLESPIlBQMvzQznLPkGS/ht/1XxJ+NqLZgLbwrL1Qyab2zOgfoXea1pSjFXKZx/OHG96A7Js0p2rsPjOHdydKb7uD7qRdV1foKg7OVKQVXufhGlIIQ3F0d3WbwZNPsHMvtrN6nF5DdhIfxKQMIiwCPtRTj1zcfs9WhaRhsUCgYEAzywXL6SQxAuPZL8FZ+Li+tCTfK7pCs6/Jztz7aHcxcN9rp/LT477mh74UTzzwb3FTMAzz+00vEmq0AYbVVJnWGJMQsoCUdEyzdl48CrBtSTuLFUv4zLB7zeq0TbWuCs5z5XZ59xWya5xfJaqRjL1TJRW14oUiB1G+7MOokdZmYsCgYEAonA3y8SohaVPo3iLRjXZYgotcKZbWVEwXT2yph0WpYh38WfyXhOQg3Wn5HkbM74BrXyc2bRzf5VVxzoHMj2NP7/rkN4orCTPLRvJWLJyl6nB8ZUihV1x6Yrsh0T0IwU/xyg7KPMY0ryO+ePUrgKJ/1BpzOg+Py/YMClTOo8SttkCgYARnfk2xvK8iRMfiRLnm6abl4MDNkiA78XXizm3em0wsAgPAm2ijVEd8QZCukEsN3wAo9OEGfLDFCyfVfWbEs/Q90Lu5wi9dmGwmY6sNaaVRdevE2toEZfmRMCU2+n0bVCUM3T9P4Jt0hS6eIFwSMMNSQv9djN6w6qWmspiyFh5MwKBgBUe9odIUmpCgQSny1VR0W2Okkn8KWmWVC/qksilIIMIOxT0v8d+/cs8P0k/uH4hIqyRuvuOqvR3p2myxKewczbt2bRfSCtgceVswMM8LacbkLuaIdWZtX4encyJVWgZXdzvSp011xwGCJ7t4KZ7G/VyLJwDLHRk7feROgqUUTsb
client.authorities: USER
request:
  type: REDIS # REDIS / MAP, config cache type
  range: 10000
  count: 3
token:
  store: REDIS # REDIS / DB, config TokenStore type

# ===============================
# = HTTP/HTTPS
# ===============================
# You can comment above profile and uncomment line below to operate using https.
# You can generate your own keystore with keytool.
# And copy it to resources package.
# Finally modify the application-https.properties.
server:
  port: 8080
  undertow:
    io-threads: 4
    worker-threads: 32
    buffer-size: 1024
    direct-buffers: true
# Configure the server to run with SSL/TLS and using HTTPS
#  port: 8443
#  ssl:
#    key-store: classpath:your_own_cert.jks.sample
#    key-store-password: <your-ssl-keystore-password>
#    key-password: <your-ssl-key-password>

# ===============================
# = LOGS
# ===============================
logging.file: data/logs/core.log

# ===============================
# = SPRING CONFIG
# ===============================
spring:
  profiles:
    active: dev
# Configure the server to run with SSL/TLS and using HTTPS
#    active: https
# ===============================
# = DATA SOURCE
# ===============================
# If you want to use mysql, you could uncomment line below.
# And use the mysql dependency in the 'build.gradle'.
# Set here configurations for the database connection
  datasource:
    url: jdbc:postgresql://localhost/core?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&zeroDateTimeBehavior=convertToNull
    username: core
    password: core
    hikari:
      connection-test-query: SELECT 1
# Keep the connection alive if idle for a long time (needed in production)

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use 'spring.jpa.properties.*' for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
  jpa:
    show-sql: true
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
    properties:
      hibernate:
        format_sql: false
        generate_statistics: false
        temp:
          use_jdbc_metadata_defaults: false
# Mysql
#      dialect: org.hibernate.dialect.MySQL5Dialect
      dialect: org.hibernate.dialect.PostgreSQLDialect
# Redis cache
  cache:
    type: redis
    cache-names: core_cache
  redis:
    host: localhost
    port: 6379

# ===============================
# = SPRING BOOT ADMIN
# ===============================
management.security.enabled: true
